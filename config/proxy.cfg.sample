##############################################################################
# Dicop proxy configuration

# See perldoc doc/Config.pod for further information

##############################################################################
# Configuration of daemon

# Name of the proxy
name    = "dicop-proxy"

# Default title prefix for HTML status pages
title   = "Dicop-Proxy - "

# The ID of the proxy. This is used to authenticate this proxy against the
# server. You need to add this proxy with this ID at the Dicop main server!
id	= "1000252"

# Who is the upstream/main server I need to talk to?
server	= http://dicop-server:8888/

# URL of fileserver(s) (list multiples as extra lines)
file_server	= http://dicop-server:80/dicop/files/

# User and group the daemon process should switch itself to after start.
# make shure that the user and group below actually exist and the permissions
# are adjusted accordingly
user    = "dicop"
group   = "dicop"

# Which port to listen for client connects
port    = "8889"
# On which interface should the deamon be bound? "*" means on all interfaces
# of this machine, other variants would be "eth0" etc.
host    = "*"
# The protocol to speak to the client.
# Either "tcp" or "ssl" for encrypted connection to client-side.
proto   = "tcp"

# After starting, go to the background. 0 to disable, and 1 to enable.
background = 0

# After binding to the port, chroot() to the current dir. Very recommended
# for security reasons
chroot = "."

# In seconds, value the deamon should sleep before trying to change the
# user and group and start really working. Default 0, usually 0, only
# needed for boot-from-cd-demo
initial_sleep = 0

##############################################################################
# Client side config

# In seconds, how long to spent handling one request at most, in seconds.
# Don't set to high to prevent locking up the server
max_request_time = 5

# Clients with a lower version than this are not allowed to connect
# Set to 0 to disable check
require_client_version  = 3.00
# The same for the build, set to 0 to disable and check only version number
require_client_build    = 59

# Allowed client architectures (anything else is invalid)
client_architectures    = linux,mswin32,os2,darwin

##############################################################################
# security config

# The following settings consist of lists of IPs or nets, separated by ','.
# The word 'any' is equivalent to 0.0.0.0/0 and 'none' to 0.0.0.0/32

# Note that the default is deny, e.g. if not explicitely listed, the right to
# do something is denied. To deny specific IPs (like spoofed or 'impossible'
# one) you should deploy a packetfilter or firewall in addition to these
# settings.

# Examples:
# 0.0.0.0/32            all IPs (usually only for allow_work and allow_stats,
#                       otherwise a bad idea
# any                   same as 0.0.0.0/0
# 1.2.3.4/32            IP 1.2.3.4 only
# 1.2.3.4               the same as 1.2.3.4/32
# 1.2.3.0/24            class c net 1.2.3.0
# 1.2.0.0/16            class b net 1.2.0.0
# 1.2.3.4,1.2.4.0/24    1.2.3.4 and 1.2.4.0

# The IPs that are allowed to do the following:

# administrate the server - the proxy does not support this
allow_admin     = "127.0.0.1"
# request work and submit results
allow_work      = "any"
# the main status page
allow_status    = "none"
allow_stats    = "127.0.0.1"

# The IPs that are denied to do the following:

# administrate the server
deny_admin      = "none"
# request work and submit results
deny_work       = "none"
# view arbitrary status pages
deny_status     = "none"
deny_stats     = "none"

##############################################################################
# Name of log files (inside log_dir)

error_log	= error.log
server_log	= proxy.log

# EOF
